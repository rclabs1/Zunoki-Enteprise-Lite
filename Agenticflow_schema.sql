-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admin_activity_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  admin_user_id text NOT NULL,
  action text NOT NULL,
  target_user_id text,
  target_resource text,
  details jsonb DEFAULT '{}'::jsonb,
  ip_address inet,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT admin_activity_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.admin_user_overrides (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  override_type text NOT NULL CHECK (override_type = ANY (ARRAY['sync_limit'::text, 'credit_limit'::text, 'api_rate_limit'::text, 'feature_access'::text])),
  override_value jsonb NOT NULL,
  reason text,
  expires_at timestamp with time zone,
  created_by text NOT NULL,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  is_active boolean DEFAULT true,
  CONSTRAINT admin_user_overrides_pkey PRIMARY KEY (id)
);
CREATE TABLE public.admin_users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL UNIQUE,
  email text NOT NULL,
  role text NOT NULL DEFAULT 'admin'::text CHECK (role = ANY (ARRAY['super_admin'::text, 'admin'::text, 'moderator'::text])),
  permissions jsonb DEFAULT '[]'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT admin_users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_flows (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  name text NOT NULL,
  description text,
  flow_config jsonb NOT NULL,
  trigger_conditions jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  execution_count integer DEFAULT 0,
  last_executed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT agent_flows_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_knowledge_sources (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agent_id uuid NOT NULL,
  user_id text NOT NULL,
  source_type text NOT NULL CHECK (source_type = ANY (ARRAY['pdf'::text, 'url'::text, 'text'::text, 'image'::text, 'video'::text, 'audio'::text, 'document'::text])),
  source_url text,
  source_name text NOT NULL,
  source_size bigint,
  processing_status text DEFAULT 'pending'::text CHECK (processing_status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'failed'::text])),
  processing_error text,
  content_type text,
  language text DEFAULT 'en'::text,
  page_count integer,
  word_count integer,
  vector_count integer DEFAULT 0,
  embedding_model text DEFAULT 'text-embedding-ada-002'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  tokens_used integer DEFAULT 0,
  CONSTRAINT agent_knowledge_sources_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_performance_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  agent_id text NOT NULL,
  agent_type text NOT NULL CHECK (agent_type = ANY (ARRAY['ai'::text, 'human'::text])),
  agent_name text,
  date date NOT NULL,
  conversations_handled integer DEFAULT 0,
  messages_sent integer DEFAULT 0,
  avg_response_time_seconds integer DEFAULT 0,
  customer_satisfaction_score numeric,
  leads_converted integer DEFAULT 0,
  revenue_generated numeric DEFAULT 0,
  handoffs_requested integer DEFAULT 0,
  handoffs_received integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT agent_performance_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_responses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  conversation_id uuid,
  message_id text,
  user_id text NOT NULL,
  agent_id uuid,
  agent_type text NOT NULL CHECK (agent_type = ANY (ARRAY['ai_agent'::text, 'human_agent'::text])),
  customer_message text NOT NULL,
  agent_response text NOT NULL,
  response_time numeric,
  context_used jsonb DEFAULT '[]'::jsonb,
  confidence_score numeric,
  escalated_to_human boolean DEFAULT false,
  escalation_reason text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT agent_responses_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agent_reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agent_id uuid,
  reviewer_id uuid,
  rating integer CHECK (rating >= 1 AND rating <= 5),
  review_text text,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT agent_reviews_pkey PRIMARY KEY (id),
  CONSTRAINT agent_reviews_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT agent_reviews_reviewer_id_fkey FOREIGN KEY (reviewer_id) REFERENCES public.users(id)
);
CREATE TABLE public.agentic_usage_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  date date NOT NULL,
  credits_used integer DEFAULT 0,
  api_calls integer DEFAULT 0,
  agent_executions integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT agentic_usage_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agents (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text,
  name character varying NOT NULL,
  description text,
  category character varying,
  flow_data jsonb NOT NULL,
  is_active boolean DEFAULT false,
  is_template boolean DEFAULT false,
  template_price numeric DEFAULT 0,
  template_category character varying,
  install_count integer DEFAULT 0,
  rating numeric DEFAULT 0.0,
  rating_count integer DEFAULT 0,
  total_conversations integer DEFAULT 0,
  total_messages_sent integer DEFAULT 0,
  avg_response_time_seconds integer DEFAULT 0,
  ai_model character varying DEFAULT 'groq-mixtral'::character varying,
  ai_temperature numeric DEFAULT 0.7,
  ai_max_tokens integer DEFAULT 500,
  confidence_threshold numeric DEFAULT 0.7,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  visual_workflow jsonb,
  workflow_config jsonb,
  platforms ARRAY DEFAULT '{}'::text[],
  tags ARRAY DEFAULT '{}'::text[],
  features jsonb DEFAULT '{"autoResponse": false, "voiceEnabled": false}'::jsonb,
  created_by text,
  status text DEFAULT 'inactive'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text, 'draft'::text, 'archived'::text])),
  conversations_handled integer DEFAULT 0,
  customer_satisfaction_score numeric DEFAULT 0,
  is_public boolean DEFAULT false,
  is_marketplace_agent boolean DEFAULT false,
  marketplace_price numeric DEFAULT NULL::numeric,
  marketplace_description text,
  marketplace_rating numeric DEFAULT 0,
  marketplace_reviews_count integer DEFAULT 0,
  source_template_id uuid,
  purchase_reference_id uuid,
  monthly_usage_count integer DEFAULT 0,
  usage_reset_date date DEFAULT CURRENT_DATE,
  usage_limit integer DEFAULT 40,
  platform_contacts jsonb DEFAULT '{}'::jsonb,
  working_hours text DEFAULT '9:00 AM - 5:00 PM'::text,
  timezone text DEFAULT 'UTC'::text,
  availability_status text DEFAULT 'available'::text CHECK (availability_status = ANY (ARRAY['available'::text, 'busy'::text, 'offline'::text])),
  max_concurrent_conversations integer DEFAULT 5,
  type text DEFAULT 'ai_agent'::text CHECK (type = ANY (ARRAY['ai_agent'::text, 'human'::text])),
  specialization ARRAY DEFAULT '{}'::text[],
  CONSTRAINT agents_pkey PRIMARY KEY (id),
  CONSTRAINT agents_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_identifier)
);
CREATE TABLE public.ai_agent_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  description text NOT NULL,
  category text NOT NULL,
  use_case text NOT NULL,
  prompt_template text NOT NULL,
  configuration jsonb DEFAULT '{}'::jsonb,
  tags jsonb DEFAULT '[]'::jsonb,
  price numeric DEFAULT 0.00,
  is_free boolean DEFAULT true,
  is_featured boolean DEFAULT false,
  downloads_count integer DEFAULT 0,
  rating numeric DEFAULT 0.00,
  rating_count integer DEFAULT 0,
  creator_id text,
  creator_name text,
  version text DEFAULT '1.0.0'::text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  approval_status text DEFAULT 'approved'::text CHECK (approval_status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  approved_by text,
  approved_at timestamp with time zone,
  rejection_reason text,
  visibility text DEFAULT 'public'::text CHECK (visibility = ANY (ARRAY['private'::text, 'public'::text, 'system'::text])),
  pricing_tier text DEFAULT 'free'::text CHECK (pricing_tier = ANY (ARRAY['free'::text, 'premium'::text])),
  revenue_share_enabled boolean DEFAULT true,
  creator_revenue_share numeric DEFAULT 70.0,
  allows_modification boolean DEFAULT false,
  allows_commercial_use boolean DEFAULT true,
  usage_limits jsonb DEFAULT '{"free": {"resetDate": "monthly", "monthlyConversations": 40}, "paid": {"resetDate": "monthly", "monthlyConversations": 500}}'::jsonb,
  purchase_count integer DEFAULT 0,
  total_revenue numeric DEFAULT 0,
  CONSTRAINT ai_agent_templates_pkey PRIMARY KEY (id),
  CONSTRAINT ai_agent_templates_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.users(user_identifier)
);
CREATE TABLE public.ai_agents (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  name text NOT NULL,
  description text,
  category text DEFAULT 'General'::text,
  model text DEFAULT 'gpt-4o-mini'::text,
  temperature numeric DEFAULT 0.7,
  max_tokens integer DEFAULT 500,
  system_prompt text,
  capabilities jsonb DEFAULT '[]'::jsonb,
  specialization jsonb DEFAULT '[]'::jsonb,
  languages jsonb DEFAULT '["en"]'::jsonb,
  status text DEFAULT 'draft'::text CHECK (status = ANY (ARRAY['draft'::text, 'active'::text, 'inactive'::text, 'archived'::text])),
  training_status text DEFAULT 'untrained'::text CHECK (training_status = ANY (ARRAY['untrained'::text, 'training'::text, 'trained'::text, 'failed'::text])),
  knowledge_base_size integer DEFAULT 0,
  last_trained_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ai_agents_pkey PRIMARY KEY (id)
);
CREATE TABLE public.analytics_daily (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  agent_id uuid,
  date date NOT NULL,
  messages_sent integer DEFAULT 0,
  messages_received integer DEFAULT 0,
  conversations_started integer DEFAULT 0,
  conversations_completed integer DEFAULT 0,
  leads_captured integer DEFAULT 0,
  leads_qualified integer DEFAULT 0,
  leads_converted integer DEFAULT 0,
  avg_response_time_seconds integer DEFAULT 0,
  avg_ai_confidence numeric DEFAULT 0,
  human_handoffs integer DEFAULT 0,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT analytics_daily_pkey PRIMARY KEY (id),
  CONSTRAINT analytics_daily_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT analytics_daily_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id)
);
CREATE TABLE public.assignment_rules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  name character varying NOT NULL,
  trigger_conditions jsonb NOT NULL,
  target_type character varying NOT NULL,
  target_agent_id uuid,
  target_team_member_id uuid,
  priority integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT assignment_rules_pkey PRIMARY KEY (id),
  CONSTRAINT assignment_rules_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT assignment_rules_target_agent_id_fkey FOREIGN KEY (target_agent_id) REFERENCES public.agents(id),
  CONSTRAINT assignment_rules_target_team_member_id_fkey FOREIGN KEY (target_team_member_id) REFERENCES public.team_members(id)
);
CREATE TABLE public.automation_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  automation_type text NOT NULL,
  resource_id text,
  action_taken text NOT NULL,
  result jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT automation_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.campaign_compliance_scores (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  campaign_id text NOT NULL,
  campaign_name text NOT NULL,
  platforms ARRAY NOT NULL,
  audience_size integer NOT NULL,
  overall_compliance_score integer DEFAULT 0 CHECK (overall_compliance_score >= 0 AND overall_compliance_score <= 100),
  platform_scores jsonb DEFAULT '{}'::jsonb,
  compliance_issues jsonb DEFAULT '[]'::jsonb,
  compliance_suggestions jsonb DEFAULT '[]'::jsonb,
  template_used boolean DEFAULT false,
  consent_checked boolean DEFAULT false,
  opt_out_included boolean DEFAULT false,
  message_content_hash text,
  sent_at timestamp with time zone,
  delivery_rate numeric,
  response_rate numeric,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT campaign_compliance_scores_pkey PRIMARY KEY (id)
);
CREATE TABLE public.campaign_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  platform text NOT NULL,
  metrics_data jsonb NOT NULL,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  data_quality_score integer DEFAULT 85,
  freshness_hours integer DEFAULT 0,
  CONSTRAINT campaign_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.compliance_performance_metrics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  platform text NOT NULL,
  date date NOT NULL,
  total_campaigns integer DEFAULT 0,
  compliant_campaigns integer DEFAULT 0,
  avg_compliance_score numeric DEFAULT 0,
  warnings_shown integer DEFAULT 0,
  warnings_accepted integer DEFAULT 0,
  template_usage_rate numeric DEFAULT 0,
  consent_check_rate numeric DEFAULT 0,
  opt_out_inclusion_rate numeric DEFAULT 0,
  avg_delivery_rate numeric DEFAULT 0,
  avg_response_rate numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT compliance_performance_metrics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.compliance_rules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  platform text NOT NULL CHECK (platform = ANY (ARRAY['whatsapp'::text, 'telegram'::text, 'twilio-sms'::text, 'gmail'::text, 'facebook'::text, 'instagram'::text, 'slack'::text, 'discord'::text, 'all'::text])),
  rule_type text NOT NULL CHECK (rule_type = ANY (ARRAY['template_required'::text, 'opt_out_required'::text, 'consent_required'::text, 'character_limit'::text, 'media_restriction'::text, 'frequency_limit'::text])),
  rule_name text NOT NULL,
  description text NOT NULL,
  severity text NOT NULL DEFAULT 'warning'::text CHECK (severity = ANY (ARRAY['info'::text, 'warning'::text, 'error'::text])),
  threshold_value integer,
  applies_to_audience_size integer,
  message_pattern text,
  suggested_action text,
  auto_fix_available boolean DEFAULT false,
  is_active boolean DEFAULT true,
  priority integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT compliance_rules_pkey PRIMARY KEY (id)
);
CREATE TABLE public.compliance_warnings_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  campaign_id text,
  warning_type text NOT NULL,
  warning_message text NOT NULL,
  platform text NOT NULL,
  audience_size integer,
  compliance_score integer,
  user_action text CHECK (user_action = ANY (ARRAY['dismissed'::text, 'accepted_suggestion'::text, 'ignored'::text, 'fixed_issue'::text])),
  suggested_fix text,
  warning_data jsonb DEFAULT '{}'::jsonb,
  shown_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  action_taken_at timestamp with time zone,
  CONSTRAINT compliance_warnings_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.contact_assignments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  contact_id uuid,
  assigned_to_type character varying NOT NULL DEFAULT 'ai'::character varying,
  agent_id uuid,
  team_member_id uuid,
  assigned_by character varying DEFAULT 'auto'::character varying,
  handoff_reason character varying,
  handoff_context jsonb,
  urgency_level character varying DEFAULT 'normal'::character varying,
  assigned_at timestamp without time zone DEFAULT now(),
  completed_at timestamp without time zone,
  is_active boolean DEFAULT true,
  CONSTRAINT contact_assignments_pkey PRIMARY KEY (id),
  CONSTRAINT contact_assignments_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contacts(id),
  CONSTRAINT contact_assignments_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT contact_assignments_team_member_id_fkey FOREIGN KEY (team_member_id) REFERENCES public.team_members(id)
);
CREATE TABLE public.contacts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  phone character varying NOT NULL,
  name character varying,
  email character varying,
  lead_status character varying DEFAULT 'new'::character varying,
  lead_score integer DEFAULT 0,
  tags ARRAY,
  current_agent_id uuid,
  current_team_member_id uuid,
  assignment_status character varying DEFAULT 'unassigned'::character varying,
  last_interaction timestamp without time zone,
  last_agent_interaction timestamp without time zone,
  interaction_count integer DEFAULT 0,
  source_platform character varying,
  acquisition_cost numeric,
  first_interaction_context jsonb,
  custom_fields jsonb DEFAULT '{}'::jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT contacts_pkey PRIMARY KEY (id),
  CONSTRAINT contacts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT contacts_current_agent_id_fkey FOREIGN KEY (current_agent_id) REFERENCES public.agents(id),
  CONSTRAINT contacts_current_team_member_id_fkey FOREIGN KEY (current_team_member_id) REFERENCES public.team_members(id)
);
CREATE TABLE public.conversation_agent_assignments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  conversation_id uuid NOT NULL,
  user_id text NOT NULL,
  agent_type text NOT NULL CHECK (agent_type = ANY (ARRAY['ai_agent'::text, 'human'::text])),
  agent_id text NOT NULL,
  agent_name text NOT NULL,
  assigned_by text NOT NULL,
  assignment_reason text DEFAULT 'Manual assignment'::text,
  status text NOT NULL DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text])),
  auto_response_enabled boolean DEFAULT true,
  assigned_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT conversation_agent_assignments_pkey PRIMARY KEY (id),
  CONSTRAINT conversation_agent_assignments_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.crm_conversations(id)
);
CREATE TABLE public.conversations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  contact_id uuid,
  agent_id uuid,
  team_member_id uuid,
  message_type character varying NOT NULL,
  message_body text,
  media_url character varying,
  media_type character varying,
  trigger_matched character varying,
  agent_confidence_score numeric,
  conversation_status character varying DEFAULT 'active'::character varying,
  requires_human boolean DEFAULT false,
  provider_id uuid,
  provider_message_id character varying,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT conversations_pkey PRIMARY KEY (id),
  CONSTRAINT conversations_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT conversations_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contacts(id),
  CONSTRAINT conversations_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT conversations_team_member_id_fkey FOREIGN KEY (team_member_id) REFERENCES public.team_members(id),
  CONSTRAINT conversations_provider_id_fkey FOREIGN KEY (provider_id) REFERENCES public.whatsapp_providers(id)
);
CREATE TABLE public.coupon_usage (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  coupon_id uuid NOT NULL,
  user_id text NOT NULL,
  payment_order_id uuid,
  razorpay_order_id text,
  original_amount numeric NOT NULL,
  discount_applied numeric NOT NULL,
  final_amount numeric NOT NULL,
  plan_key text NOT NULL,
  user_email text,
  customer_info jsonb,
  used_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  ip_address text,
  user_agent text,
  CONSTRAINT coupon_usage_pkey PRIMARY KEY (id),
  CONSTRAINT coupon_usage_coupon_id_fkey FOREIGN KEY (coupon_id) REFERENCES public.coupons(id),
  CONSTRAINT coupon_usage_payment_order_id_fkey FOREIGN KEY (payment_order_id) REFERENCES public.payment_orders(id)
);
CREATE TABLE public.coupons (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  code text NOT NULL UNIQUE,
  name text NOT NULL,
  description text,
  discount_type text NOT NULL CHECK (discount_type = ANY (ARRAY['percentage'::text, 'fixed_amount'::text])),
  discount_value numeric NOT NULL,
  max_uses integer,
  used_count integer DEFAULT 0,
  valid_from timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  valid_until timestamp with time zone,
  min_order_amount numeric DEFAULT 0,
  applicable_plans ARRAY DEFAULT ARRAY['starter'::text, 'business'::text, 'enterprise'::text],
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  created_by text,
  admin_notes text,
  total_discount_given numeric DEFAULT 0,
  total_orders integer DEFAULT 0,
  CONSTRAINT coupons_pkey PRIMARY KEY (id)
);
CREATE TABLE public.creator_revenue (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  creator_id text NOT NULL,
  purchase_id uuid NOT NULL,
  template_id uuid NOT NULL,
  gross_amount numeric NOT NULL,
  platform_fee numeric NOT NULL,
  net_amount numeric NOT NULL,
  transaction_type text NOT NULL CHECK (transaction_type = ANY (ARRAY['purchase'::text, 'subscription'::text, 'usage_fee'::text])),
  payout_status text DEFAULT 'pending'::text CHECK (payout_status = ANY (ARRAY['pending'::text, 'paid'::text, 'failed'::text])),
  payout_date timestamp with time zone,
  payout_reference text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT creator_revenue_pkey PRIMARY KEY (id),
  CONSTRAINT creator_revenue_purchase_id_fkey FOREIGN KEY (purchase_id) REFERENCES public.template_purchases(id),
  CONSTRAINT creator_revenue_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.ai_agent_templates(id)
);
CREATE TABLE public.crm_contacts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  phone_number text NOT NULL,
  whatsapp_name text,
  display_name text,
  profile_picture_url text,
  tags jsonb DEFAULT '[]'::jsonb,
  notes text,
  lead_score integer DEFAULT 0,
  lifecycle_stage text DEFAULT 'lead'::text CHECK (lifecycle_stage = ANY (ARRAY['lead'::text, 'prospect'::text, 'customer'::text, 'evangelist'::text])),
  priority text DEFAULT 'medium'::text CHECK (priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text])),
  last_seen timestamp with time zone,
  is_blocked boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  platform text DEFAULT 'whatsapp'::text CHECK (platform = ANY (ARRAY['whatsapp'::text, 'telegram'::text, 'facebook'::text, 'instagram'::text, 'slack'::text, 'discord'::text, 'youtube'::text, 'tiktok'::text, 'gmail'::text])),
  platform_id text DEFAULT ''::text,
  platform_username text,
  CONSTRAINT crm_contacts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.crm_conversations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  contact_id uuid NOT NULL,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'pending'::text, 'resolved'::text, 'archived'::text])),
  assigned_agent_id text,
  assigned_agent_name text,
  handoff_reason text,
  priority text DEFAULT 'medium'::text CHECK (priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text])),
  last_message_text text,
  last_message_at timestamp with time zone,
  unread_count integer DEFAULT 0,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  platform text DEFAULT 'whatsapp'::text CHECK (platform = ANY (ARRAY['whatsapp'::text, 'telegram'::text, 'facebook'::text, 'instagram'::text, 'slack'::text, 'discord'::text, 'youtube'::text, 'tiktok'::text, 'gmail'::text])),
  platform_thread_id text,
  category text DEFAULT 'general'::text CHECK (category = ANY (ARRAY['acquisition'::text, 'engagement'::text, 'retention'::text, 'support'::text, 'general'::text])),
  CONSTRAINT crm_conversations_pkey PRIMARY KEY (id),
  CONSTRAINT crm_conversations_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.crm_contacts(id)
);
CREATE TABLE public.custom_agents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  name text NOT NULL,
  description text,
  prompt text NOT NULL,
  configuration jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  usage_count integer DEFAULT 0,
  last_used_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT custom_agents_pkey PRIMARY KEY (id)
);
CREATE TABLE public.customer_consent_tracking (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  contact_identifier text NOT NULL,
  platform text NOT NULL CHECK (platform = ANY (ARRAY['whatsapp'::text, 'telegram'::text, 'twilio-sms'::text, 'gmail'::text, 'facebook'::text, 'instagram'::text, 'slack'::text, 'discord'::text])),
  consent_type text NOT NULL CHECK (consent_type = ANY (ARRAY['marketing'::text, 'transactional'::text, 'support'::text, 'all'::text])),
  consent_status text NOT NULL DEFAULT 'unknown'::text CHECK (consent_status = ANY (ARRAY['opted_in'::text, 'opted_out'::text, 'unknown'::text, 'pending'::text])),
  consent_method text,
  consent_date timestamp with time zone,
  consent_source text,
  opt_out_date timestamp with time zone,
  opt_out_method text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT customer_consent_tracking_pkey PRIMARY KEY (id)
);
CREATE TABLE public.discord_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  conversation_id uuid,
  contact_id uuid,
  message_text text,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text,
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'delivered'::text,
  timestamp timestamp with time zone DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  platform text NOT NULL DEFAULT 'discord'::text,
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT discord_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.executions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agent_id uuid,
  contact_id uuid,
  conversation_id uuid,
  trigger_type character varying,
  blocks_executed jsonb,
  execution_time_ms integer,
  success boolean,
  error_message text,
  ai_tokens_used integer DEFAULT 0,
  input_data jsonb,
  output_data jsonb,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT executions_pkey PRIMARY KEY (id),
  CONSTRAINT executions_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT executions_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contacts(id),
  CONSTRAINT executions_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id)
);
CREATE TABLE public.facebook_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  conversation_id uuid,
  contact_id uuid,
  message_text text,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text,
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'delivered'::text,
  timestamp timestamp with time zone DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  platform text NOT NULL DEFAULT 'facebook'::text,
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT facebook_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.gmail_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  conversation_id uuid,
  contact_id uuid,
  message_text text,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text,
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'delivered'::text,
  timestamp timestamp with time zone DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  platform text NOT NULL DEFAULT 'gmail'::text,
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT gmail_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.handoff_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  contact_id uuid,
  from_type character varying,
  from_agent_id uuid,
  from_team_member_id uuid,
  to_type character varying,
  to_agent_id uuid,
  to_team_member_id uuid,
  handoff_reason character varying,
  context_passed jsonb,
  confidence_score numeric,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT handoff_history_pkey PRIMARY KEY (id),
  CONSTRAINT handoff_history_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contacts(id),
  CONSTRAINT handoff_history_from_agent_id_fkey FOREIGN KEY (from_agent_id) REFERENCES public.agents(id),
  CONSTRAINT handoff_history_from_team_member_id_fkey FOREIGN KEY (from_team_member_id) REFERENCES public.team_members(id),
  CONSTRAINT handoff_history_to_agent_id_fkey FOREIGN KEY (to_agent_id) REFERENCES public.agents(id),
  CONSTRAINT handoff_history_to_team_member_id_fkey FOREIGN KEY (to_team_member_id) REFERENCES public.team_members(id)
);
CREATE TABLE public.instagram_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  conversation_id uuid,
  contact_id uuid,
  message_text text,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text,
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'delivered'::text,
  timestamp timestamp with time zone DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  platform text NOT NULL DEFAULT 'instagram'::text,
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT instagram_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.knowledge_vectors (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  source_id uuid NOT NULL,
  agent_id uuid NOT NULL,
  user_id text NOT NULL,
  content text NOT NULL,
  content_hash text NOT NULL,
  embedding USER-DEFINED,
  metadata jsonb DEFAULT '{}'::jsonb,
  chunk_index integer NOT NULL,
  token_count integer,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT knowledge_vectors_pkey PRIMARY KEY (id),
  CONSTRAINT knowledge_vectors_source_id_fkey FOREIGN KEY (source_id) REFERENCES public.agent_knowledge_sources(id)
);
CREATE TABLE public.kpi_categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  display_name text NOT NULL,
  description text,
  icon text,
  color text DEFAULT '#6B7280'::text,
  sort_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT kpi_categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.kpi_historical_values (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  kpi_id uuid NOT NULL,
  date date NOT NULL,
  period_type text DEFAULT 'daily'::text CHECK (period_type = ANY (ARRAY['hourly'::text, 'daily'::text, 'weekly'::text, 'monthly'::text])),
  value numeric NOT NULL,
  previous_value numeric,
  change_amount numeric,
  change_percentage numeric,
  platform_breakdown jsonb DEFAULT '{}'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  confidence_score numeric DEFAULT 1.0 CHECK (confidence_score >= 0::numeric AND confidence_score <= 1::numeric),
  data_completeness numeric DEFAULT 1.0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT kpi_historical_values_pkey PRIMARY KEY (id),
  CONSTRAINT kpi_historical_values_kpi_fkey FOREIGN KEY (kpi_id) REFERENCES public.kpi_library(id)
);
CREATE TABLE public.kpi_library (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  display_name text NOT NULL,
  description text,
  category text NOT NULL CHECK (category = ANY (ARRAY['performance'::text, 'financial'::text, 'audience'::text, 'operational'::text, 'conversion'::text, 'engagement'::text])),
  data_source_table text,
  data_source_column text,
  calculation_type text DEFAULT 'direct'::text CHECK (calculation_type = ANY (ARRAY['direct'::text, 'calculated'::text, 'aggregated'::text, 'derived'::text])),
  formula text,
  required_platforms ARRAY DEFAULT '{}'::text[],
  supported_platforms ARRAY DEFAULT '{}'::text[],
  format_type text DEFAULT 'number'::text CHECK (format_type = ANY (ARRAY['number'::text, 'currency'::text, 'percentage'::text, 'duration'::text, 'ratio'::text])),
  decimal_places integer DEFAULT 2,
  prefix text,
  suffix text,
  default_chart_type text DEFAULT 'line'::text CHECK (default_chart_type = ANY (ARRAY['line'::text, 'bar'::text, 'pie'::text, 'doughnut'::text, 'area'::text, 'gauge'::text])),
  chart_color text DEFAULT '#4285f4'::text,
  insights_enabled boolean DEFAULT true,
  benchmark_value numeric,
  benchmark_source text,
  target_direction text DEFAULT 'higher'::text CHECK (target_direction = ANY (ARRAY['higher'::text, 'lower'::text, 'optimal'::text])),
  optimal_range_min numeric,
  optimal_range_max numeric,
  alert_enabled boolean DEFAULT false,
  alert_threshold_high numeric,
  alert_threshold_low numeric,
  alert_change_percentage numeric,
  is_system boolean DEFAULT true,
  created_by text,
  usage_count integer DEFAULT 0,
  popularity_score numeric DEFAULT 0,
  tags ARRAY DEFAULT '{}'::text[],
  icon text,
  help_text text,
  example_value text,
  is_active boolean DEFAULT true,
  version text DEFAULT '1.0'::text,
  deprecated_at timestamp with time zone,
  replacement_kpi_id uuid,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT kpi_library_pkey PRIMARY KEY (id),
  CONSTRAINT kpi_library_replacement_fkey FOREIGN KEY (replacement_kpi_id) REFERENCES public.kpi_library(id)
);
CREATE TABLE public.kpi_suggestions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  kpi_id uuid NOT NULL,
  suggestion_reason text NOT NULL,
  confidence_score numeric DEFAULT 0.5 CHECK (confidence_score >= 0::numeric AND confidence_score <= 1::numeric),
  priority integer DEFAULT 0,
  current_value numeric,
  trend_direction text CHECK (trend_direction = ANY (ARRAY['up'::text, 'down'::text, 'stable'::text])),
  change_percentage numeric,
  benchmark_comparison text,
  shown_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  user_action text CHECK (user_action = ANY (ARRAY['pending'::text, 'accepted'::text, 'dismissed'::text, 'ignored'::text])),
  acted_at timestamp with time zone,
  expires_at timestamp with time zone,
  is_active boolean DEFAULT true,
  CONSTRAINT kpi_suggestions_pkey PRIMARY KEY (id),
  CONSTRAINT kpi_suggestions_kpi_fkey FOREIGN KEY (kpi_id) REFERENCES public.kpi_library(id)
);
CREATE TABLE public.lead_sources (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  platform character varying,
  campaign_id character varying,
  campaign_name character varying,
  ad_set_id character varying,
  ad_id character varying,
  utm_source character varying,
  utm_medium character varying,
  utm_campaign character varying,
  utm_content character varying,
  utm_term character varying,
  fb_page_id character varying,
  fb_form_id character varying,
  ig_account_id character varying,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT lead_sources_pkey PRIMARY KEY (id),
  CONSTRAINT lead_sources_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.marketplace_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  buyer_id uuid,
  seller_id uuid,
  agent_id uuid,
  amount numeric NOT NULL,
  commission numeric NOT NULL,
  seller_payout numeric NOT NULL,
  payment_method character varying,
  payment_intent_id character varying,
  status character varying DEFAULT 'pending'::character varying,
  buyer_email character varying,
  seller_email character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT marketplace_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT marketplace_transactions_buyer_id_fkey FOREIGN KEY (buyer_id) REFERENCES public.users(id),
  CONSTRAINT marketplace_transactions_seller_id_fkey FOREIGN KEY (seller_id) REFERENCES public.users(id),
  CONSTRAINT marketplace_transactions_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id)
);
CREATE TABLE public.message_classification_rules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  rule_name text NOT NULL,
  keywords jsonb NOT NULL,
  intent text NOT NULL CHECK (intent = ANY (ARRAY['acquisition'::text, 'engagement'::text, 'retention'::text, 'support'::text])),
  priority text NOT NULL CHECK (priority = ANY (ARRAY['hot'::text, 'warm'::text, 'cold'::text])),
  urgency text NOT NULL CHECK (urgency = ANY (ARRAY['high'::text, 'medium'::text, 'low'::text])),
  auto_assign_to text CHECK (auto_assign_to = ANY (ARRAY['ai'::text, 'human'::text])),
  lead_score_boost integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT message_classification_rules_pkey PRIMARY KEY (id)
);
CREATE TABLE public.message_templates_library (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  description text,
  category text NOT NULL CHECK (category = ANY (ARRAY['welcome'::text, 'promotional'::text, 'transactional'::text, 'notification'::text, 'support'::text, 'engagement'::text])),
  content text NOT NULL,
  platforms ARRAY NOT NULL DEFAULT '{}'::text[],
  variables jsonb DEFAULT '[]'::jsonb,
  compliance_score integer DEFAULT 85 CHECK (compliance_score >= 0 AND compliance_score <= 100),
  compliance_notes text,
  approval_status text DEFAULT 'internal'::text CHECK (approval_status = ANY (ARRAY['internal'::text, 'whatsapp_approved'::text, 'dlt_approved'::text, 'rejected'::text])),
  usage_count integer DEFAULT 0,
  last_used_at timestamp with time zone,
  created_by text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT message_templates_library_pkey PRIMARY KEY (id)
);
CREATE TABLE public.messaging_integrations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  platform text NOT NULL CHECK (platform = ANY (ARRAY['whatsapp'::text, 'telegram'::text, 'facebook'::text, 'instagram'::text, 'slack'::text, 'discord'::text, 'youtube'::text, 'tiktok'::text, 'gmail'::text])),
  provider text,
  name text NOT NULL,
  config jsonb NOT NULL,
  status text DEFAULT 'inactive'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text, 'error'::text, 'pending'::text])),
  webhook_url text,
  webhook_secret text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_sync_at timestamp with time zone,
  error_message text,
  CONSTRAINT messaging_integrations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.oauth_states (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  state_token text NOT NULL,
  platform text NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  expires_at timestamp without time zone DEFAULT (now() + '00:10:00'::interval),
  CONSTRAINT oauth_states_pkey PRIMARY KEY (id)
);
CREATE TABLE public.oauth_tokens (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  platform text NOT NULL,
  access_token text NOT NULL,
  refresh_token text,
  expires_at timestamp with time zone,
  scope text,
  account_info jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT oauth_tokens_pkey PRIMARY KEY (id)
);
CREATE TABLE public.payment_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  razorpay_order_id text NOT NULL UNIQUE,
  razorpay_payment_id text,
  razorpay_signature text,
  plan_key text NOT NULL,
  amount numeric NOT NULL,
  currency text NOT NULL DEFAULT 'USD'::text,
  status text NOT NULL DEFAULT 'created'::text CHECK (status = ANY (ARRAY['created'::text, 'paid'::text, 'failed'::text, 'cancelled'::text])),
  customer_info jsonb NOT NULL,
  payment_method text,
  failure_reason text,
  paid_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  coupon_id uuid,
  coupon_code text,
  original_amount numeric,
  discount_applied numeric DEFAULT 0,
  CONSTRAINT payment_orders_pkey PRIMARY KEY (id),
  CONSTRAINT payment_orders_coupon_id_fkey FOREIGN KEY (coupon_id) REFERENCES public.coupons(id)
);
CREATE TABLE public.security_audit_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_type text NOT NULL CHECK (event_type = ANY (ARRAY['oauth_callback'::text, 'token_encryption'::text, 'rate_limit_hit'::text, 'invalid_request'::text, 'token_access'::text, 'admin_action'::text])),
  user_id text,
  ip_address inet,
  user_agent text,
  request_id text,
  platform text,
  details jsonb,
  risk_level text NOT NULL CHECK (risk_level = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'critical'::text])),
  success boolean NOT NULL DEFAULT false,
  timestamp timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  environment text DEFAULT 'development'::text,
  CONSTRAINT security_audit_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.slack_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  conversation_id uuid,
  contact_id uuid,
  message_text text,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text,
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'delivered'::text,
  timestamp timestamp with time zone DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  platform text NOT NULL DEFAULT 'slack'::text,
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT slack_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.sms_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  conversation_id uuid,
  contact_id uuid,
  message_text text,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text,
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'delivered'::text,
  timestamp timestamp with time zone DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  platform text NOT NULL DEFAULT 'sms'::text,
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT sms_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.subscription_plans (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_key text NOT NULL UNIQUE,
  plan_name text NOT NULL,
  description text,
  price_usd numeric NOT NULL,
  price_inr numeric NOT NULL,
  billing_interval text NOT NULL DEFAULT 'month'::text CHECK (billing_interval = ANY (ARRAY['month'::text, 'year'::text])),
  features jsonb NOT NULL,
  limits jsonb NOT NULL,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  is_popular boolean DEFAULT false,
  trial_days integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT subscription_plans_pkey PRIMARY KEY (id)
);
CREATE TABLE public.system_config (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  config_key text NOT NULL UNIQUE,
  config_value jsonb NOT NULL,
  description text,
  category text DEFAULT 'general'::text,
  last_modified_by text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT system_config_pkey PRIMARY KEY (id)
);
CREATE TABLE public.tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  contact_id uuid,
  assigned_to_type character varying NOT NULL,
  agent_id uuid,
  team_member_id uuid,
  title character varying NOT NULL,
  description text,
  task_type character varying,
  priority character varying DEFAULT 'medium'::character varying,
  status character varying DEFAULT 'pending'::character varying,
  due_date timestamp without time zone,
  completed_at timestamp without time zone,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT tasks_pkey PRIMARY KEY (id),
  CONSTRAINT tasks_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contacts(id),
  CONSTRAINT tasks_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT tasks_team_member_id_fkey FOREIGN KEY (team_member_id) REFERENCES public.team_members(id)
);
CREATE TABLE public.team_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  email character varying NOT NULL,
  name character varying NOT NULL,
  phone character varying,
  role character varying,
  status character varying DEFAULT 'offline'::character varying,
  max_concurrent_chats integer DEFAULT 20,
  specialties ARRAY,
  avg_response_time_minutes integer DEFAULT 0,
  total_chats_handled integer DEFAULT 0,
  customer_rating numeric DEFAULT 0.0,
  total_ratings integer DEFAULT 0,
  notification_email boolean DEFAULT true,
  notification_whatsapp boolean DEFAULT false,
  working_hours jsonb DEFAULT '{"end": "17:00", "start": "09:00", "timezone": "UTC"}'::jsonb,
  invited boolean DEFAULT false,
  invitation_token character varying,
  invitation_expires_at timestamp without time zone,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  team_id uuid,
  agent_id uuid,
  CONSTRAINT team_members_pkey PRIMARY KEY (id),
  CONSTRAINT team_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT team_members_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT team_members_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id)
);
CREATE TABLE public.teams (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  name text NOT NULL,
  description text DEFAULT ''::text,
  specialization ARRAY DEFAULT '{}'::text[],
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teams_pkey PRIMARY KEY (id)
);
CREATE TABLE public.telegram_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  conversation_id uuid,
  contact_id uuid,
  message_text text,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text,
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'delivered'::text,
  timestamp timestamp with time zone DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  platform text NOT NULL DEFAULT 'telegram'::text,
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT telegram_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.template_purchases (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  buyer_id uuid NOT NULL,
  template_id uuid NOT NULL,
  creator_id text,
  purchase_type text NOT NULL DEFAULT 'one_time'::text CHECK (purchase_type = ANY (ARRAY['one_time'::text, 'monthly_subscription'::text, 'free_access'::text])),
  price_paid numeric NOT NULL DEFAULT 0,
  platform_fee numeric NOT NULL DEFAULT 0,
  creator_earnings numeric NOT NULL DEFAULT 0,
  usage_limit integer DEFAULT 40,
  usage_count integer DEFAULT 0,
  usage_reset_date date DEFAULT CURRENT_DATE,
  subscription_status text DEFAULT 'active'::text CHECK (subscription_status = ANY (ARRAY['active'::text, 'canceled'::text, 'expired'::text])),
  expires_at timestamp with time zone,
  auto_renewal boolean DEFAULT false,
  license_type text NOT NULL DEFAULT 'personal'::text CHECK (license_type = ANY (ARRAY['personal'::text, 'commercial'::text])),
  purchased_at timestamp with time zone DEFAULT now(),
  canceled_at timestamp with time zone,
  CONSTRAINT template_purchases_pkey PRIMARY KEY (id),
  CONSTRAINT template_purchases_buyer_id_fkey FOREIGN KEY (buyer_id) REFERENCES public.users(id),
  CONSTRAINT template_purchases_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.ai_agent_templates(id)
);
CREATE TABLE public.template_reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  template_id uuid NOT NULL,
  reviewer_id uuid NOT NULL,
  purchase_id uuid,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  comment text,
  is_verified_purchase boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT template_reviews_pkey PRIMARY KEY (id),
  CONSTRAINT template_reviews_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.ai_agent_templates(id),
  CONSTRAINT template_reviews_reviewer_id_fkey FOREIGN KEY (reviewer_id) REFERENCES public.users(id),
  CONSTRAINT template_reviews_purchase_id_fkey FOREIGN KEY (purchase_id) REFERENCES public.template_purchases(id)
);
CREATE TABLE public.tiktok_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  conversation_id uuid,
  contact_id uuid,
  message_text text,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text,
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'delivered'::text,
  timestamp timestamp with time zone DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  platform text NOT NULL DEFAULT 'tiktok'::text,
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT tiktok_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_activities (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  action text NOT NULL,
  resource text,
  resource_id text,
  details jsonb DEFAULT '{}'::jsonb,
  ip_address inet,
  user_agent text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_activities_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_agent_instances (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  agent_id uuid NOT NULL,
  template_id uuid NOT NULL,
  purchase_id uuid NOT NULL,
  custom_name text,
  custom_config jsonb,
  is_active boolean DEFAULT true,
  conversations_this_month integer DEFAULT 0,
  last_reset_date date DEFAULT CURRENT_DATE,
  last_used_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_agent_instances_pkey PRIMARY KEY (id),
  CONSTRAINT user_agent_instances_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT user_agent_instances_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT user_agent_instances_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.ai_agent_templates(id),
  CONSTRAINT user_agent_instances_purchase_id_fkey FOREIGN KEY (purchase_id) REFERENCES public.template_purchases(id)
);
CREATE TABLE public.user_audience_insights (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  insight_type text NOT NULL,
  insight_data jsonb NOT NULL,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_audience_insights_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_credits (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  credit_type text NOT NULL CHECK (credit_type = ANY (ARRAY['api_calls'::text, 'sync_operations'::text, 'ai_requests'::text, 'webhook_processing'::text])),
  credits_available integer DEFAULT 0,
  credits_used integer DEFAULT 0,
  credits_purchased integer DEFAULT 0,
  reset_period text DEFAULT 'monthly'::text CHECK (reset_period = ANY (ARRAY['daily'::text, 'weekly'::text, 'monthly'::text, 'yearly'::text, 'never'::text])),
  last_reset_date date DEFAULT CURRENT_DATE,
  next_reset_date date,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_credits_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_dashboard_kpis (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  kpi_id uuid NOT NULL,
  position_x integer DEFAULT 0,
  position_y integer DEFAULT 0,
  size_width integer DEFAULT 1,
  size_height integer DEFAULT 1,
  custom_name text,
  custom_target numeric,
  custom_color text,
  alerts_enabled boolean DEFAULT false,
  alert_email boolean DEFAULT true,
  alert_threshold_high numeric,
  alert_threshold_low numeric,
  alert_change_percentage numeric,
  date_range text DEFAULT '30d'::text CHECK (date_range = ANY (ARRAY['7d'::text, '30d'::text, '90d'::text, '1y'::text, 'custom'::text])),
  custom_date_start date,
  custom_date_end date,
  platform_filter ARRAY,
  is_visible boolean DEFAULT true,
  is_favorite boolean DEFAULT false,
  last_viewed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_dashboard_kpis_pkey PRIMARY KEY (id),
  CONSTRAINT user_dashboard_kpis_kpi_fkey FOREIGN KEY (kpi_id) REFERENCES public.kpi_library(id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL UNIQUE,
  email text NOT NULL,
  display_name text,
  first_name text,
  last_name text,
  avatar_url text,
  phone text,
  business_name text,
  timezone text DEFAULT 'UTC'::text,
  subscription_tier text DEFAULT 'free'::text,
  subscription_status text DEFAULT 'active'::text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  uid text,
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  plan_key text NOT NULL,
  status text NOT NULL DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'cancelled'::text, 'expired'::text, 'past_due'::text, 'trialing'::text])),
  current_period_start timestamp with time zone NOT NULL,
  current_period_end timestamp with time zone NOT NULL,
  razorpay_subscription_id text,
  razorpay_customer_id text,
  amount numeric NOT NULL,
  currency text NOT NULL DEFAULT 'USD'::text,
  trial_end timestamp with time zone,
  cancel_at timestamp with time zone,
  cancelled_at timestamp with time zone,
  cancel_reason text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_subscriptions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_sync_limits (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  platform text NOT NULL CHECK (platform = ANY (ARRAY['google_ads'::text, 'facebook_ads'::text, 'tiktok_ads'::text])),
  sync_date date DEFAULT CURRENT_DATE,
  sync_count integer DEFAULT 0,
  daily_limit integer DEFAULT 3,
  last_sync_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_sync_limits_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_tokens (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  platform text NOT NULL,
  token_data jsonb NOT NULL,
  expires_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT user_tokens_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email character varying NOT NULL UNIQUE,
  phone character varying,
  business_name character varying,
  subscription_tier character varying DEFAULT 'free'::character varying,
  subscription_status character varying DEFAULT 'active'::character varying,
  billing_email character varying,
  first_name character varying,
  last_name character varying,
  avatar_url character varying,
  timezone character varying DEFAULT 'UTC'::character varying,
  max_agents integer DEFAULT 1,
  max_contacts integer DEFAULT 50,
  max_team_members integer DEFAULT 0,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  total_earnings numeric DEFAULT 0,
  revenue_share_percentage numeric DEFAULT 70.0,
  stripe_customer_id text,
  payout_email text,
  subscription_expires_at timestamp with time zone,
  subscription_renewed_at timestamp with time zone,
  user_identifier text UNIQUE,
  current_plan text DEFAULT 'free'::text,
  plan_status text DEFAULT 'inactive'::text,
  subscription_start timestamp with time zone,
  subscription_end timestamp with time zone,
  razorpay_customer_id text,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.webhook_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  provider_id uuid,
  event_type character varying,
  from_number character varying,
  to_number character varying,
  message_body text,
  message_type character varying,
  media_url character varying,
  raw_payload jsonb,
  processed boolean DEFAULT false,
  processing_error text,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT webhook_events_pkey PRIMARY KEY (id),
  CONSTRAINT webhook_events_provider_id_fkey FOREIGN KEY (provider_id) REFERENCES public.whatsapp_providers(id)
);
CREATE TABLE public.webhook_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  integration_id uuid,
  platform text NOT NULL,
  webhook_type text NOT NULL,
  payload jsonb NOT NULL,
  processing_status text DEFAULT 'pending'::text CHECK (processing_status = ANY (ARRAY['pending'::text, 'processed'::text, 'failed'::text])),
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT webhook_logs_pkey PRIMARY KEY (id),
  CONSTRAINT webhook_logs_integration_id_fkey FOREIGN KEY (integration_id) REFERENCES public.messaging_integrations(id)
);
CREATE TABLE public.website_chat_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  conversation_id uuid,
  contact_id uuid,
  message_text text,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text,
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'delivered'::text,
  timestamp timestamp with time zone DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  platform text NOT NULL DEFAULT 'website_chat'::text,
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT website_chat_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.whatsapp_messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id text NOT NULL,
  conversation_id uuid NOT NULL,
  contact_id uuid NOT NULL,
  message_text text NOT NULL,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text CHECK (message_type = ANY (ARRAY['text'::text, 'image'::text, 'document'::text, 'audio'::text, 'video'::text, 'sticker'::text, 'location'::text, 'contact'::text])),
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'sent'::text CHECK (status = ANY (ARRAY['sent'::text, 'delivered'::text, 'read'::text, 'failed'::text])),
  timestamp timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  platform text DEFAULT 'whatsapp'::text CHECK (platform = ANY (ARRAY['whatsapp'::text, 'telegram'::text, 'facebook'::text, 'instagram'::text, 'slack'::text, 'discord'::text, 'youtube'::text, 'tiktok'::text, 'gmail'::text])),
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT whatsapp_messages_pkey PRIMARY KEY (id),
  CONSTRAINT whatsapp_messages_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.crm_conversations(id),
  CONSTRAINT whatsapp_messages_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.crm_contacts(id)
);
CREATE TABLE public.whatsapp_providers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  provider_type character varying NOT NULL,
  provider_name character varying,
  phone_number character varying NOT NULL,
  display_name character varying,
  api_credentials jsonb NOT NULL,
  webhook_url character varying,
  webhook_secret character varying,
  is_active boolean DEFAULT false,
  is_verified boolean DEFAULT false,
  verification_code character varying,
  rate_limit_per_hour integer DEFAULT 1000,
  supports_media boolean DEFAULT true,
  supports_templates boolean DEFAULT true,
  provider_settings jsonb DEFAULT '{}'::jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT whatsapp_providers_pkey PRIMARY KEY (id),
  CONSTRAINT whatsapp_providers_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.youtube_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  conversation_id uuid,
  contact_id uuid,
  message_text text,
  direction text NOT NULL CHECK (direction = ANY (ARRAY['inbound'::text, 'outbound'::text])),
  message_type text DEFAULT 'text'::text,
  media_url text,
  agent_id text,
  is_from_bot boolean DEFAULT false,
  bot_name text,
  status text DEFAULT 'delivered'::text,
  timestamp timestamp with time zone DEFAULT timezone('utc'::text, now()),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  platform text NOT NULL DEFAULT 'youtube'::text,
  platform_message_id text,
  reply_to_message_id text,
  CONSTRAINT youtube_messages_pkey PRIMARY KEY (id)
);